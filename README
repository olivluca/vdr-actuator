This is a "plugin" for the Video Disk Recorder (VDR).

Written by:                  Luca Olivetti <luca@olivetti.cjb.net>
Pieces of code and inspiration taken from the rotor plugin by  
Thomas Bergwinkl <Thomas.Bergwinkl@t-online.de>


See the file COPYING for license information.

THIS PLUGINS NEEDS vdr >= 1.3.19

DESCRIPTION

With this plugin you can control a linear or an horizon to horizon actuator
controlled through the parallel port.
This kind of actuator usually needs a 36V supply (I drive mine at 12V to
reduce noise) and has a reed relay that gives pulses while the motor is 
running. By counting the pulses you can know the position of the actuator
(and the position of the dish).
You have to build a simple circuit to interface the parallel port to the
actuator. The circuit I used is in the file actuator.sch (made with
geda-gschem, see http://www.geda.seul.org, a png rendering is in
actuator.png) in the "module" subdirectory.
You also have to build and load a kernel module (2.6.x kernel needed), look
in the "module" subdirectory for details.


POSITION COUNTING

The position increments going west and decrements going east (you have to
connect the motor accordingly!).
The soft East Limit (the origin) is always 0, i.e. during normal operation
the position range is 0..West Limit.


SETUP MENU

In the setup-menu of the plugin you have to select the dvb card which is
connected to the dish driven by the actuator (see below in "KNOWN PROBLEMS"
about multi cards setups).


MAIN MENU

In the plugin-menu you see on the top the dish target and position.
Next there's an indication of the signal strength of the currently
tuned channel. You also see the dish target and the dish position.

Then the onscreen buttons (select with up,down,left,right, operate
with Ok):

Drive East      : moves the dish east.
Halt	    	: stops any movement of the motor.
Drive West 	: moves the dish west.
Recalc 		: sets the position of the dish to the position of the
                  currently selected satellite (source).
Goto xx    	: actuator goes to position xx.
Store    	: the current position will be stored to the current
		  satellite (source).
XX Steps East	: dish moves XX steps eastwards.
Enable/Disable
Limits          : enables/disables the soft limits. Note that the limits
                  will be automatically enabled when you leave the menu.
XX Steps West	: dish moves XX steps westwards.
Set East Limit  : sets the position of the dish at 0 and recalculates all
                  stored positions.
Set Zero        : sets the position of the dish but won't recalculate stored
                  positions.
Set West Limit  : stores the current position as the west soft limit.


If you're positioned on the line showing the current satellite, you can
select another one with the left and right buttons and go to its position
with the Ok button.

Frequency, Symbolrate, Vpid & Apid: Here you can select the parameters 
(switch the polarizaton pressing left/right) of a transponder  you want
to tune to (by pressing OK) and see what signal-strength you get there.
When possible you should also see the new channel on scree.

Scan Transponder: If you press OK on Scan Transponder, vdr
will switch to the selected transponder and scan for new/updated channels.


POSITION DISPLAY

If you want to see an indication of the position of the dish when going to a
different satellite while switching channels, you have to apply the patch
provided in the patches subdirectory.  Without this patch the plugin should
work but you won't have any indication of the dish moving unless you select
the plugin main menu.


KNOWN PROBLEMS

- The plugin will load the current dish position at start-up and stores it
on disk each time it detects it has changed. It's possible to lose the
actual position if the pc crashes while the dish is moving. In this case you
have to manually peak the dish at a known satellite (it may be necessary to
disable the limits) and use the "Recalc" function. I'd like to store the
position in the cmos ram (in the kernel module) but I don't know where I can
find a couple of free bytes (and if the pc crashes while storing the
position, it may not have updated the cmos ram checksum).

- If you (like me) are using the dxr3 plugin, you'll find that it doesn't
exit cleanly: soon after vdr calls cDevice::Shutdown() the dxr3 plugin will
crash vdr, preventing the actuator plugin to save the current dish position
on disk. As a workaround I reverted the order of the shutdown (around the
end of vdr.c) from

  cDevice::Shutdown();
  PluginManager.Shutdown(true);

to

  PluginManager.Shutdown(true);
  cDevice::Shutdown();

Also remeber to put on the vdr command line the dxr3 plugin *before* the
actuator plugin (so that it will be stopped *after* actuator has safely
written the position to disk). NOTE THAT THIS IS ONLY A WORKAROUND AND 
NOT THE CORRECT AND DEFINITIVE SOLUTION.

- When the pc is turned on or off my parallel port sets all data lines at 1,
driving both relays for a very short while. Due to the wiring of the relays
the motor should not move anyway. If you don't like it you can modify the
circuit to add some more logic to avoid the problem.

- vdr assumes that, as soon as a channel has been switched to, the new source
(satellite) is valid, even if the dish is moving, so the autoupdate function
will assign new/updated channels to the wrong satellite. The plugin's
workaround is to disable autoupdate while the dish is moving and restore the
previous setting only when it has reached the target satellite. It's
possible that the plugin will fail to restore the value of this setting.
If you see that channels aren't updating anymore check this setting (main
menu->configuration->dbv->update channels, note that while the dish is
moving this setting is always "no", so check and modify it only when the
actuator is idle).

- in a multi card setup, vdr considers all cards equally capable of providing
any source (satellite), regardless to the dish/lnb the card is connected to.
This is obviously wrong. Attached to the following post you'll find a patch
to configure which sources (satellites) a card can relly tune to:
http://article.gmane.org/gmane.linux.vdr/14038

- Vdr now checks for a lock during 5 seconds after switching channels. 
If the new channel is on a different satellite there won't be a lock at
once: depending on the distance vdr will get stuck up to 5 seconds and then,
if the position hasn't been reached yet, will show a black screen.
In the patches subdirectory there's a vdr-x.x.x-steerable.patch to reverse
to the old behaviour (i.e. vdr doesn't wait for a lock. It doesn't seem to
have adverse effects here but YMMV).
The same patch also gives more time for the dish to reach the target after
starting a recording.
